{"version":3,"sources":["components/detail_view/detail_view.module.css","components/preview/preview.module.css","components/navigator/navigator.module.css","components/detail_view/header/header.module.css","components/error-view/error-view.module.css","components/popover/popover.module.css","components/detail_view/footer/footer.module.css","components/thumbnail/thumbnail.module.css","components/throbber/throbber.module.css","components/star/star.module.css","components/month-selector/month-selector-button.module.css","components/overview.module.css","App.module.css","XKCDApiApi.ts","simple_date.tsx","favourites.ts","components/error-view/error-view.tsx","components/thumbnail/thumbnail.tsx","components/throbber/throbber.tsx","components/star/full_star.svg","components/star/empty_star.svg","components/star/star.tsx","components/preview/preview.tsx","components/month-selector/month-selector-button.tsx","components/month-selector/month-selector.tsx","components/navigator/chevron.svg","components/navigator/navigator.tsx","components/overview.tsx","components/popover/popover.tsx","components/detail_view/header/header.tsx","components/detail_view/footer/footer.tsx","components/detail_view/detail_view.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","getProxyURL","comicId","getUrl","jsonToXKCD","json","obj","JSON","parse","year","month","day","num","rest","date","Date","Number","number","getPageInfo","a","preload","undefined","Error","url","storedData","localStorage","getItem","fetch","response","ok","console","error","statusText","text","result","setItem","xkcdInfo","preloadImage","img","Promise","resolve","reject","Image","addEventListener","message","src","isSimpleDate","getSimpleDateRange","from","to","dateToSimpleDate","compareSimpleDate","arg","second","Math","sign","getFullYear","getMonth","simpleDateToDate","endOfMonth","adjustSimpleDate","amount","months","floor","adjustSimpleDateRange","key","favourites","isFavourite","id","includes","addFavourite","push","stringify","removeFavourite","index","findIndex","val","splice","ErrorView","queue","useState","getAllItems","messages","setMessages","useEffect","listener","newItems","addListener","removeListener","className","styles","container","map","errorItem","value","onClick","removeItem","ErrorQueue","entry","this","timeout","setTimeout","indexOf","Thumbnail","comicInfo","imgUrl","title","alt","cs","image","Throbber","color","style","background","starEnumToPictureMap","Map","full_star","description","empty_star","Star","filled","size","star","get","width","height","Preview","infoPromise","info","onOpenComic","setInfo","favourite","setFavourite","then","comicLabel","thumbnail","throbber","MonthSelectorButton","onOpen","dateRange","simpleDateToString","simpleDateRangeToString","button","monthNames","age","MonthSelector","onChangeMonth","validDateRange","validFrom","validTo","pickerRef","useRef","ref","lang","monthName","slice","years","min","max","autoRange","onDismiss","current","show","Navigator","setMonthRange","onToggleViewFavourites","viewingFavourites","monthControls","chevron","left","start","end","right","Overview","comics","onUpdateDateRange","onToggleFavourites","length","range","Popover","open","children","handler","event","contains","target","window","removeEventListener","content","ComicHeader","onToggleFavourite","header","starButton","ComicFooter","links","href","getSiteLink","rel","getExplainLink","altContainer","DetailView","previousComic","nextComic","goBackHome","errorQueue","setComicInfo","reRender","fetchComicInfo","catch","err","addItem","detailContainer","bool","imgContainer","nav","footer","App","setDateRange","latestComic","setLatestComic","firstComic","setFirstComic","openComic","setOpenComic","comicInfoArray","setComicInfoArray","setViewingFavourites","sort","getComicIdsInRange","comicRange","comicMonth","viewingFavs","all","firstDate","lastDate","lastNumber","firstSimpleDate","firstMonthCount","lastSimpleDate","lastMonthCount","monthRange","startMonthCount","endMonthCount","startMonthDelta","endMonthDelta","estimatedStartComicIndex","clamp","round","estimatedEndComicIndex","findBoundaryComic","estimatedIndex","lastComic","isEnd","dateObj","returnValue","i","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,gBAAkB,qCAAqC,OAAS,4BAA4B,OAAS,4BAA4B,aAAe,kCAAkC,IAAM,yBAAyB,IAAM,yBAAyB,KAAO,0BAA0B,MAAQ,6B,iBCA3SD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,WAAa,4BAA4B,UAAY,2BAA2B,SAAW,4B,gBCApJD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,cAAgB,iCAAiC,QAAU,2BAA2B,KAAO,wBAAwB,MAAQ,yBAAyB,KAAO,0B,oBCAxND,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,uBAAuB,MAAQ,sBAAsB,WAAa,6B,kBCA7HD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,UAAY,gC,gBCAxED,EAAOC,QAAU,CAAC,WAAa,4BAA4B,QAAU,2B,gBCArED,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,aAAe,+B,sBCA/DD,EAAOC,QAAU,CAAC,MAAQ,2B,gBCA1BD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,gBAAgB,kC,gBCA1ED,EAAOC,QAAU,CAAC,KAAO,qB,iBCAzBD,EAAOC,QAAU,CAAC,OAAS,wC,gBCA3BD,EAAOC,QAAU,CAAC,UAAY,8B,gBCA9BD,EAAOC,QAAU,CAAC,UAAY,yB,qNCExBC,EAAc,SAACC,GAAD,MAAsB,uCAD3B,SAACA,GAAD,iCAA0CA,EAAO,UAAMA,EAAN,KAAmB,GAApE,eACoEC,CAAOD,IAiBpFE,EAAa,SAACC,GAChB,IAAMC,EAAMC,KAAKC,MAAMH,GACfI,EAAmCH,EAAnCG,KAAMC,EAA6BJ,EAA7BI,MAAOC,EAAsBL,EAAtBK,IAAKC,EAAiBN,EAAjBM,IAAQC,EAFS,YAEAP,EAFA,8BAI3C,OAAO,aACHQ,KAAM,IAAIC,KAAKC,OAAOP,GAAOO,OAAON,GAAS,EAAGM,OAAOL,IACvDM,OAAQL,GACLC,IAoCIK,EAhCE,uCAAG,WAAOhB,GAAP,qCAAAiB,EAAA,yDAAyBC,EAAzB,uCACAC,IAAZnB,GAAyBA,GAAW,GADxB,sBAEN,IAAIoB,MAAJ,sCAAyCpB,EAAzC,MAFM,UAKVqB,EAAMtB,EAAYC,IACpBA,EANY,qBAQNsB,EAAaC,aAAaC,QAAQH,IAR5B,yCAUDnB,EAAWoB,IAVV,wBAcOG,IAAMJ,GAdb,YAcVK,EAdU,QAgBFC,GAhBE,uBAiBZC,QAAQC,MAAM,mBAAoBR,GAC5B,IAAID,MAAM,mCAAqCM,EAASI,YAlBlD,yBAqBKJ,EAASK,OArBd,eAqBVC,EArBU,OAsBhBT,aAAaU,QAAQZ,EAAKW,GAEpBE,EAAWhC,EAAW8B,GAExBd,GACAiB,EAAaD,EAASE,KA3BV,kBA8BTF,GA9BS,4CAAH,sDAkCJC,EAAe,SAACd,GACzB,OAAO,IAAIgB,SAAQ,SAACC,EAASC,GACzB,IAAMH,EAAM,IAAII,MAChBJ,EAAIK,iBAAiB,QAAQ,kBAAMH,OACnCF,EAAIK,iBAAiB,SAAS,gBAAGC,EAAH,EAAGA,QAAH,OAAiBH,EAAOG,MAEtDN,EAAIO,IAAMtB,MCpDX,SAASuB,EAAaxC,GACzB,MACmB,kBAARA,GACI,OAARA,GAC2C,kBAAnCA,EAA0BG,MACW,kBAArCH,EAA2BI,MAUvC,SAASqC,IAA+G,IAA5FC,EAA2F,uDAAjE,IAAIjC,KAAQkC,EAAqD,uDAA7B,IAAIlC,KACjG,OAAI+B,EAAaE,IAASF,EAAaG,GAC5B,CAAED,OAAMC,MAIZ,CAAED,KAAME,EAAiBF,GAAeC,GAAIC,EAAiBD,IAMjE,SAASE,EAAkBC,EAAmCC,GACjE,MAnCkB,iBAFY/C,EAqCT8C,IAlCP,MAAP9C,GACAwC,EAAcxC,EAA0B0C,OACxCF,EAAcxC,EAAwB2C,IAiClCE,EAAkBC,EAAIJ,KAAMI,EAAIH,IAKxCG,EAAI3C,OAAS4C,EAAQ5C,KAAa6C,KAAKC,KAAKH,EAAI3C,KAAO4C,EAAQ5C,MAC3D6C,KAAKC,KAAKH,EAAI1C,MAAQ2C,EAAQ3C,OA5ClC,IAA2BJ,EA+C3B,SAAS4C,EAAiBpC,GAC7B,MAAO,CACHL,KAAMK,EAAK0C,cACX9C,MAAOI,EAAK2C,WAAa,GAI1B,SAASC,EAAT,GAAkF,IAAtDjD,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,MAAqBiD,EAA0B,wDACpF,OAAIA,EAGO,IAAI5C,KAAKN,EAAMC,EAAO,EAAG,EAAG,EAAG,GAAI,GAEvC,IAAIK,KAAKN,EAAMC,EAAQ,GAG3B,SAASkD,EAAT,GAAkE,IAAvCnD,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAoBmD,EAAY,uDAAH,EAE3DC,EAAgB,GAAPrD,GAAaC,EAAQ,GAAKmD,EAEzC,MAAO,CACHnD,MAAO,EAAKoD,EAAS,GACrBrD,KAAM6C,KAAKS,MAAMD,EAAS,KAI3B,SAASE,EAAT,GAA4F,IAA3DhB,EAA0D,EAA1DA,KAAMC,EAAoD,EAApDA,GAAuBY,EAA6B,uDAApB,EAC1E,MAAO,CAAEb,KAAMY,EAAiBZ,EAAMa,GAASZ,GAAIW,EAAiBX,EAAIY,ICnF5E,IAAMI,EAAM,kBACNC,EAAuB3D,KAAKC,MAAL,UAAWiB,aAAaC,QAAQuC,UAAhC,QAAwC,MAM9D,SAASE,EAAYC,GACxB,OAAOF,EAAWG,SAASD,GAGxB,SAASE,EAAaF,GACrBF,EAAWG,SAASD,KAExBF,EAAWK,KAAKH,GAChB3C,aAAaU,QAAQ8B,EAAK1D,KAAKiE,UAAUN,KAGtC,SAASO,EAAgBL,GAC5B,IAAMM,EAAQR,EAAWS,WAAU,SAAAC,GAAG,OAAIA,IAAQR,MACnC,IAAXM,IAEJR,EAAWW,OAAOH,EAAO,GACzBjD,aAAaU,QAAQ8B,EAAK1D,KAAKiE,UAAUN,K,4DChB9B,SAASY,EAAT,GAA+C,IAA1BC,EAAyB,EAAzBA,MAAyB,EACzBC,mBAASD,EAAME,eADU,mBAClDC,EADkD,KACxCC,EADwC,KAQzD,OANAC,qBAAU,WACN,IAAMC,EAAW,SAACC,GAA6BH,EAAYG,IAE3D,OADAP,EAAMQ,YAAYF,GACX,kBAAMN,EAAMS,eAAeH,MACnC,CAACF,EAAaJ,IAEV,qBAAKU,UAAWC,IAAOC,UAAvB,SACFT,EAASU,KAAI,gBAAGhD,EAAH,EAAGA,QAASwB,EAAZ,EAAYA,GAAZ,OAAqB,uBAAeqB,UAAWC,IAAOG,UAAjC,UAC9BjD,EAAQ,wBAAQkD,MAAM,IAAIC,QAAS,WAAQhB,EAAMiB,WAAW5B,IAApD,iBADiCA,Q,kHAiBzC6B,EAAb,uGAC2B,KAD3B,gDAEiB,IAFjB,gDAGuC,KAHvC,KAuCID,WAAa,SAAC5B,GACV,IAAMM,EAAQ,cAAI,GAAJ,GAAYC,WAAU,SAACuB,GAAD,OAAWA,EAAM9B,KAAOA,KACxDM,EAAQ,IACZ,cAAI,GAAJ,GAAYG,OAAOH,EAAO,GAE1B,cAAI,GAAJ,OA5CR,gDA+CuB,WAAO,IAAD,4BACE,EADF,WACrB,2BAAwC,EACpCW,EADoC,SAC3B,EAAKJ,gBAFG,kCA/C7B,oDAOY3E,GAAwB,IAAD,OACrB8D,EAAK,YAAA+B,KAAA,QACX,GAAmB,kBAAR7F,EAIP,OAHA,YAAA6F,KAAA,MAAY5B,KAAK,CAAEH,KAAIxB,QAAStC,SAEhC,YAAA6F,KAAA,QAIJ,YAAAA,KAAA,MAAY5B,KAAK,CAAEH,KAAIxB,QAAStC,EAAIsC,UAChB,aAAhBtC,EAAI8F,SACJC,YAAW,WACP,EAAKL,WAAW5B,KACjB9D,EAAI8F,WApBnB,oCA0BQ,OAAO,YAAAD,KAAA,MAAYP,KAAI,kBAAsB,CAAExB,GAAxB,EAAGA,GAAyBxB,QAA5B,EAAOA,cA1BtC,kCA6BgByC,GACR,YAAAc,KAAA,MAAgB5B,KAAKc,KA9B7B,qCAiCmBA,GACX,IAAMX,EAAQ,YAAAyB,KAAA,MAAgBG,QAAQjB,GAClCX,EAAQ,GACZ,YAAAyB,KAAA,MAAgBtB,OAAOH,EAAO,OApCtC,K,iCClBe6B,EAJ4B,SAAC,GAA+D,IAAD,IAA5DC,UAAkBC,EAA0C,EAA/CnE,IAAaoE,EAAkC,EAAlCA,MAASjB,EAAyB,EAAzBA,UAAWM,EAAc,EAAdA,QACxF,OAAO,qBAAKA,QAASA,EAASlD,IAAK4D,EAAQE,IAAKD,EAAOA,MAAOA,EAAOjB,UAAWmB,IAAGlB,IAAOmB,MAAOpB,M,iBCEtFqB,GAL2B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOtB,EAAV,EAAUA,UAAV,OAA0B,sBAAKA,UAAWmB,IAAGlB,IAAOC,UAAWF,GAArC,UAChE,qBAAKuB,MAAO,CAAEC,WAAYF,KAC1B,qBAAKC,MAAO,CAAEC,WAAYF,KAC1B,qBAAKC,MAAO,CAAEC,WAAYF,S,mBCbf,OAA0B,sCCA1B,OAA0B,uC,oBCYnCG,GAAuB,IAAIC,IAAI,CACjC,EAAC,EAAM,CAAEtE,IAAKuE,GAAWC,YAAa,cACtC,EAAC,EAAO,CAAExE,IAAKyE,GAAYD,YAAa,iBAG7B,SAASE,GAAT,GAAqE,IAAD,IAApDC,EAAoD,EAApDA,OAAoD,IAA5CC,YAA4C,MAArC,GAAqC,EAAjC1B,EAAiC,EAAjCA,QAASN,EAAwB,EAAxBA,UACvD,OAAO,qBACHA,UAAWmB,IAAGlB,KAAOgC,KAAMjC,GAC3B5C,IAAG,UAAEqE,GAAqBS,IAAIH,UAA3B,aAAE,EAAkC3E,IACvC8D,IAAG,UAAEO,GAAqBS,IAAIH,UAA3B,aAAE,EAAkCH,YACvCO,MAAOH,EAAMI,OAAQJ,EACrB1B,QAASA,ICTjB,IA2Be+B,GA3BwB,SAAC,GAAwC,IAAhCC,EAA+B,EAArCC,KAAmBC,EAAkB,EAAlBA,YAAkB,EACnDjD,qBADmD,mBACpEgD,EADoE,KAC9DE,EAD8D,OAEzClD,oBAAS,GAFgC,mBAEpEmD,EAFoE,KAEzDC,EAFyD,KAW3E,OAPAhD,qBAAU,WACN2C,EAAYM,MAAK,SAAAL,GACbE,EAAQF,GACRI,EAAajE,EAAY6D,EAAK/G,cAEnC,CAAC8G,IAECC,EAOE,sBAAKvC,UAAWC,KAAOC,UAAvB,UACH,uBAAMF,UAAWC,KAAO4C,WAAxB,UACKN,EAAKtB,MACN,cAACa,GAAD,CAAMC,OAAQW,EAAWpC,QAAS,YAASoC,EAAY1D,EAAkBH,GAAc0D,EAAK/G,QAASmH,GAAcD,SAEvH,cAAC,EAAD,CAAW1C,UAAWC,KAAO6C,UAAW/B,UAAWwB,EAAMjC,QAAS,kBAAMkC,GAAeA,EAAYD,EAAK/G,cAXjG,sBAAKwE,UAAWC,KAAOC,UAAY,IAAMD,KAAO8C,SAAhD,UACH,sBAAM/C,UAAWC,KAAO4C,WAAxB,wBACA,cAAC,GAAD,CAAUvB,MAAM,uBAAuBtB,UAAWC,KAAO6C,gB,sDClB9D,SAASE,GAAT,GAA2E,IAA5CC,EAA2C,EAA3CA,OAAQC,EAAmC,EAAnCA,UACpC1G,EAAyC,IAAjCkB,EAAkBwF,GAC1BC,GAAmBD,EAAU3F,MAKvC,YAAiE,IAA9BA,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,GACrC,MAAM,SAAN,OAAgB2F,GAAmB5F,GAAnC,uBAAkD4F,GAAmB3F,IAN1B4F,CAAwBF,GAEnE,OAAO,sBAAMlD,UAAWC,KAAOoD,OAAQ/C,QAAS2C,EAAzC,SAAkDzG,IAO7D,SAAS2G,GAAT,GAAkE,IAApClI,EAAmC,EAAnCA,MAAOD,EAA4B,EAA5BA,KAEjC,MAAM,GAAN,OAAUsI,GAAWrI,EAAQ,GAA7B,YAAmCD,GCdhC,IAAMsI,GAAa,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAQrIC,GAAM,EAiBKC,OAhBf,YAA4H,IAAnGN,EAAkG,EAAlGA,UAAWO,EAAuF,EAAvFA,cAAuF,IAAxEC,eAAwBC,EAAgD,EAAtDpG,KAAqBqG,EAAiC,EAArCpG,GAC5EqG,EAAYC,mBAElB,OAAO,cAAC,KAAD,CACHP,IAAKA,KACLQ,IAAKF,EACLxD,MAAwC,IAAjC3C,EAAkBwF,GAAmBA,EAAU3F,KAAO2F,EAC7Dc,KAAMV,GAAWnD,KAAI,SAAA8D,GAAS,OAAIA,EAAUC,MAAM,EAAG,MACrDC,MAAO,CAAEC,IAAKT,EAAWU,IAAKT,GAC9BU,UAAW,EACXC,UAAW,SAAC5G,GAAwCN,EAAaM,GAAO8F,EAAc9F,EAAKA,GAAO8F,EAAc9F,EAAIJ,KAAMI,EAAIH,KAP3H,SASH,cAACwF,GAAD,CAAqBC,OAAQ,kCAAMY,EAAUW,eAAhB,aAAM,EAAmBC,QAAQvB,UAAWA,OC9BlE,OAA0B,oC,mBCkC1BwB,GAhBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,uBAAwB1B,EAA1C,EAA0CA,UAAWQ,EAArD,EAAqDA,eAArD,IAAqEmB,yBAArE,gBACd,sBAAK7E,UAAWC,KAAOC,UAAvB,UACI,sBAAKF,UAAWC,KAAO6E,cAAvB,UACI,qBAAK1H,IAAK2H,GAAS/E,UAAWmB,IAAGlB,KAAO8E,QAAS9E,KAAO+E,MACpD1E,QAAS,kBAAMqE,EAAcpG,EAAsB2E,GAAY,KAAKhC,IAAI,sBAE5E,cAAC,GAAD,CAAeuC,cAAe,SAACwB,EAAOC,GAAR,OAAgBP,EAAcrH,EAAmB2H,EAAOC,KAClFhC,UAAWA,EAAWQ,eAAgBA,IAE1C,qBAAKtG,IAAK2H,GAAS/E,UAAWmB,IAAGlB,KAAO8E,QAAS9E,KAAOkF,OACpD7E,QAAS,kBAAMqE,EAAcpG,EAAsB2E,EAAW,KAAKhC,IAAI,uBAG/E,cAACY,GAAD,CAAMxB,QAASsE,EAAwB7C,OAAQ8C,EAAmB7C,KAAM,GAAIhC,UAAWC,KAAOgC,W,oBCIvFmD,GAhBqB,SAAC,GAAiI,IAA/HlC,EAA8H,EAA9HA,UAAWmC,EAAmH,EAAnHA,OAAQ7C,EAA2G,EAA3GA,YAAa8C,EAA8F,EAA9FA,kBAAmBC,EAA2E,EAA3EA,mBAAoB7B,EAAuD,EAAvDA,eAAgBmB,EAAuC,EAAvCA,kBAC1H,OAAO,qCACH,sBAAK7E,UAAWC,KAAOC,UAAvB,UACuB,IAAlBmF,EAAOG,OAAe,aAAe,GACrCH,EAAOlF,KAAI,mCAAExB,EAAF,KAAM4D,EAAN,YAAgB,cAAC,GAAD,CAAkBA,KAAMA,EAAMC,YAAaA,GAA7B7D,SAE9C,cAAC,GAAD,CACIkG,kBAAmBA,EACnB3B,UAAWA,EACX0B,uBAAwB,kBAAMW,GAAsBA,KACpDZ,cAAe,SAACc,GAAD,OAAWH,GAAqBA,EAAkBG,IACjE/B,eAAgBA,Q,oBCrBb,SAASgC,GAAT,GAAuE,IAAD,IAAnDC,YAAmD,SAArCpB,EAAqC,EAArCA,UAAWqB,EAA0B,EAA1BA,SACjD7B,EAAMD,iBAAuB,MAWnC,OATAnE,qBAAU,WACN,GAAI4E,EAAJ,CACA,IAAMsB,EAAU,SAACC,GAAuB,IAAD,GAC/B,UAAC/B,EAAIS,eAAL,aAAC,EAAauB,SAASD,EAAME,UAAmBzB,KAGxD,OADA0B,OAAO/I,iBAAiB,QAAS2I,GAC1B,WAAQI,OAAOC,oBAAoB,QAASL,OACpD,CAACtB,IAECoB,EAGE,qBAAK3F,UAAWC,KAAOuB,WAAvB,SACH,sBAAKuC,IAAKA,EAAK/D,UAAWC,KAAOkG,QAAjC,UAA2CP,EAA3C,SAHO,K,wBCRA,SAASQ,GAAT,GAAiH,IAA1F5K,EAAyF,EAAzFA,OAAQyF,EAAiF,EAAjFA,MAAiF,IAA1EvC,mBAA0E,SAArD2H,EAAqD,EAArDA,kBAAqD,IAAlCrG,iBAAkC,MAAxB,GAAwB,EAC3H,OAAO,uBAAMA,UAAWmB,IAAGnB,EAAWC,KAAOqG,QAAtC,UACH,sBAAMtG,UAAWC,KAAOzE,OAAxB,SAAiCA,IACjC,sBAAMwE,UAAWC,KAAOgB,MAAxB,SAAgCA,IAChC,cAACa,GAAD,CAAMxB,QAAS+F,EAAmBtE,OAAQrD,EAAasB,UAAWC,KAAOsG,gB,wBCTlE,SAASC,GAAT,GAAoE,IAA7CzF,EAA4C,EAA5CA,UAA4C,IAAjCf,iBAAiC,MAAvB,GAAuB,EAC9E,OAAO,qCAAE,sBAAKA,UAAWmB,IAAGlB,KAAOwG,MAAOzG,GAAjC,UACL,mBAAG0G,KAAMC,GAAY5F,EAAUvF,QAASwK,OAAO,SAASY,IAAI,sBAA5D,oBACA,mBAAGF,KAAMG,GAAe9F,EAAUvF,QAASwK,OAAO,SAASY,IAAI,sBAA/D,6BAEJ,4BAAY5G,UAAWC,KAAO6G,aAA9B,SAA6C/F,EAAUG,SAI3D,IAAMyF,GAAc,SAAChI,GAAD,iCAAoCA,IAClDkI,GAAiB,SAAClI,GAAD,uDAA0DA,I,mBCuClEoI,GA9C+B,SAAC,GAAkE,IAAhEvL,EAA+D,EAA/DA,OAAQwL,EAAuD,EAAvDA,cAAeC,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAAiB,EAC1E5H,mBAA0B,MADgD,mBACrGwB,EADqG,KAC1FqG,EAD0F,OAGtF7H,oBAAS,GAH6E,mBAGlG8H,GAHkG,WAItG3E,EAAYhE,EAAYlD,GAgB9B,OAfAmE,qBAAU,WAEN2H,EAAe9L,GAAQoH,KAAKwE,GAAcG,OAAM,SAACC,GAAD,OAAgBL,EAAWM,QAAX,qDAAiED,EAAIrK,QAArE,WACjE,CAAC3B,EAAQ2L,IAEZxH,qBAAU,WACN,IAAMkG,EAAU,SAACC,GACK,cAAdA,EAAMtH,KAAuBwI,GAAiBA,IAChC,eAAdlB,EAAMtH,KAAwByI,GAAaA,IAC7B,WAAdnB,EAAMtH,KAAoB0I,GAAcA,KAGhD,OADAjB,OAAO/I,iBAAiB,UAAW2I,GAC5B,kBAAMI,OAAOC,oBAAoB,UAAWL,MACpD,CAACmB,EAAeC,EAAWC,IAEzBnG,EAIE,cAAC2E,GAAD,CAASC,MAAM,EAAMpB,UAAW2C,EAAhC,SACH,sBAAKlH,UAAWC,KAAOyH,gBAAvB,UACI,cAACtB,GAAD,CACI5K,OAAQuF,EAAUvF,OAClByF,MAAOF,EAAUE,MACjBvC,YAAagE,EACb2D,kBAAmB,YACd3D,EAAY1D,EAAkBH,GAAcrD,GAC7C6L,GAAS,SAAAM,GAAI,OAAKA,MAEtB3H,UAAWC,KAAOqG,SAEtB,sBAAKtG,UAAWC,KAAO2H,aAAvB,UACI,qBAAK5H,UAAWmB,IAAGlB,KAAO+E,KAAM/E,KAAO4H,KAAMvH,QAAS0G,IACtD,qBAAKhH,UAAWC,KAAOpD,IAAKO,IAAK2D,EAAUlE,IAAKqE,IAAKH,EAAUE,MAAOA,MAAOF,EAAUG,MACvF,qBAAKlB,UAAWmB,IAAGlB,KAAOkF,MAAOlF,KAAO4H,KAAMvH,QAAS2G,OAE3D,cAACT,GAAD,CAAazF,UAAWA,EAAWf,UAAWC,KAAO6H,cApBlD,wD,oBCtBTX,GAAa,IAAI3G,EAiGRuH,OA/Ff,WAAgB,IAAD,EACuBxI,mBAA0BjC,KADjD,mBACJ4F,EADI,KACO8E,EADP,OAE2BzI,qBAF3B,mBAEJ0I,EAFI,KAESC,EAFT,OAGyB3I,qBAHzB,mBAGJ4I,EAHI,KAGQC,EAHR,OAIuB7I,mBAAwB,MAJ/C,mBAIJ8I,EAJI,KAIOC,EAJP,OAKiC/I,mBAAwC,IALzE,mBAKJgJ,EALI,KAKYC,EALZ,OAMuCjJ,oBAAS,GANhD,mBAMJsF,EANI,KAMe4D,EANf,KAkEX,OAzDA9I,qBAAU,WACN2H,IAAiB1E,MAAK,SAAAL,GAAI,OAAI2F,EAAe3F,MAAOgF,OAAM,SAACC,GAAD,OAAgBL,GAAWM,QAAX,8BAA0CD,EAAIrK,QAA9C,SAC1EmK,EAAe,GAAG1E,MAAK,SAAAL,GAAI,OAAI6F,EAAc7F,MAAOgF,OAAM,SAACC,GAAD,OAAgBL,GAAWM,QAAX,qCAAiDD,EAAIrK,QAArD,WAC3E,IAEHwC,qBAAU,WACN,GAAKsI,EACL,GAAIpD,EAAmB,CACnB,IAAMpI,EjBzBP,YAAIgC,GiB0BE0B,KAAiC,SAAAhF,GAAG,MAAI,CAACA,EAAKmM,EAAenM,OAC7DuN,MAAK,gEACVF,EAAkB/L,Q,6CAElBkM,CAAmBzF,GACdN,MAAK,SAAAgG,GACFJ,EAAkB/C,GAAK,WAAL,cAASmD,IAAYzI,KAAI,SAAAhF,GAAG,MAAI,CAACA,EAAKmM,EAAenM,WACxEoM,OAAM,SAACC,GACNL,GAAWM,QAAX,2DAAuED,EAAIrK,QAA3E,WAGb,CAAC+F,EAAW+E,EAAaO,EAAmB3D,IAG/ClF,qBAAU,WAAO,IAAD,EACP0I,IACDA,EAAY,IAAZ,iBAAkBJ,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAazM,cAA/B,QAAyC,IACzC8L,EAAee,EAAY,GACtBzF,MAAK,gBAAG/F,EAAH,EAAGA,IAAH,OAAaD,EAAaC,MAC/B0K,OAAM,SAACC,GAAD,OAAgBL,GAAWM,QAAX,yCAAqDD,EAAIrK,QAAzD,SAE3BkL,EAAY,GAAK,GACjBf,EAAee,EAAY,GACtBzF,MAAK,gBAAG/F,EAAH,EAAGA,IAAH,OAAaD,EAAaC,MAC/B0K,OAAM,SAACC,GAAD,OAAgBL,GAAWM,QAAX,6CAAyDD,EAAIrK,QAA7D,YAEhC,CAACkL,EAAWJ,IAGftI,qBAAU,WACD0I,IAAaxD,GAClByC,EAAee,GACVzF,MAAK,SAAAL,GACF,IAAMsG,EAAapL,EAAiB8E,EAAKlH,MACrCqC,EAAkBmL,EAAY3F,EAAU3F,MAAQ,GAEhDyK,GAAa,SAAAvC,GAAK,OAAInI,EAAmBa,EAAiBsH,EAAMlI,MAAO,GAAIkI,EAAMjI,OAEjFE,EAAkBmL,EAAY3F,EAAU1F,IAAM,GAE9CwK,GAAa,SAAAvC,GAAK,OAAInI,EAAmBmI,EAAMlI,KAAMY,EAAiBsH,EAAMjI,GAAI,UAGvF+J,OAAM,SAACC,GACJL,GAAWM,QAAX,oDAAgED,EAAIrK,QAApE,WAET,CAACkL,EAAWnF,EAAW8E,EAAcnD,IAEnCoD,GAAgBE,EAQd,sBAAKnI,UAAWC,KAAOC,UAAvB,UACH,cAACb,EAAD,CAAWC,MAAO6H,KAClB,cAAC,GAAD,CACI9B,OAAQkD,EACR/F,YAAa8F,EACbpF,UAAWA,EACXQ,eAAgBpG,EAAmB6K,EAAW9M,KAAM4M,EAAY5M,MAChEiK,kBAAmB,SAACG,GAAWuC,EAAavC,GAAQ+C,EAAkB,KACtE3D,kBAAmBA,EACnBU,mBAAoB,WAAQkD,GAAqB,SAAAK,GAAW,OAAKA,QAEpET,GAAa,cAAC,GAAD,CACV7M,OAAQ6M,EACRpB,UAAW,kBAAMqB,GAAa,SAAAnN,GAAG,OAAI0C,KAAKuG,IAAI6D,EAAYzM,QAAQ,OAACL,QAAD,IAACA,IAAO,GAAK,OAC/E6L,cAAe,kBAAMsB,GAAa,SAAAnN,GAAG,OAAI0C,KAAKwG,IAAI,GAAG,OAAClJ,QAAD,IAACA,IAAO,GAAK,OAClE+L,WAAY,kBAAMoB,EAAa,OAC/BnB,WAAYA,QAtBT,qCACH,cAAC9H,EAAD,CAAWC,MAAO6H,KADf,iB,8CA6Bf,iEAAAzL,EAAA,6DAAoC6B,EAApC,EAAoCA,KAAMC,EAA1C,EAA0CA,GAClB,EADxB,SAEgFV,QAAQiM,IAAI,CAACzB,EADrE,GACkGA,MAF1H,0CAEmB0B,EAFnB,KAEa3N,KAFb,OAEwC4N,EAFxC,EAEkC5N,KAAwB6N,EAF1D,EAEkD1N,OACxC2N,EAAkB1L,EAAiBuL,GACnCI,EAAyC,GAAvBD,EAAgBnO,KAAYmO,EAAgBlO,MAC9DoO,EAAiB5L,EAAiBwL,GAClCK,EAAuC,GAAtBD,EAAerO,KAAYqO,EAAepO,MAE3DsO,EAAaD,EAAiBF,EAC9BI,EAA8B,GAAZjM,EAAKvC,KAAYuC,EAAKtC,MACxCwO,EAA0B,GAAVjM,EAAGxC,KAAYwC,EAAGvC,MAElCyO,GAAmBF,EAAkBJ,GAAmBG,EACxDI,GAAiBF,EAAgBL,GAAmBG,EAEpDK,EAA2BC,GAAMhM,KAAKiM,MAAMJ,EAAkBR,GAAa,EAAGA,GAC9Ea,EAAyBF,GAAMhM,KAAKiM,MAAMH,EAAgBT,GAAa,EAAGA,GAhBpF,kBAkBWpM,QAAQiM,IAAI,CACfiB,GAAkBzM,EAAMqM,EAA0BV,GAAY,GAC9Dc,GAAkBxM,EAAIuM,EAAwBb,GAAY,MApBlE,6C,+BAwBec,G,qFAAf,WAAiC3O,EAAkB4O,EAAwBC,GAA3E,+BAAAxO,EAAA,sDAA8FyO,EAA9F,gCACQC,EAAUnM,EAAiB5C,EAAM8O,GAEjClL,EAAQ4K,GAAMI,EAAiB,EAAIA,EAAiBA,EAAiB,EAAG,EAAGC,GAHnF,uBAIkB5C,EAAerI,GAJjC,sBAIyC5D,KAJzC,KAIgD+O,IAJhD,+BAKsB,IAAVnL,EALZ,qDAMQA,GAAS,EANjB,wCASkBqI,EAAerI,GATjC,uBASyC5D,KATzC,KASgD+O,IAThD,+BAUYnL,IAAUiL,EAVtB,0CAUwCA,GAVxC,QAWQjL,IAXR,iDAcWA,GAASkL,GAAS,EAAI,IAdjC,6C,sBAiBA,SAAS1E,KAEL,IAFuE,IAA5DR,EAA2D,uDAA3C,EAAGC,EAAwC,uDAA1B,EACtCmF,EAAc,GACXC,EAAIrF,EAAOqF,GAAKpF,EAAKoF,IAC1BD,EAAYvL,KAAKwL,GAErB,OAAOD,EAGX,SAASR,GAAM1O,GAAgC,IAAnBiJ,EAAkB,uDAAZ,EAAGC,EAAS,uDAAH,EACvC,OAAOxG,KAAKuG,IACRvG,KAAKwG,IAAIlJ,EAAKiJ,GACdC,GChKR,IAYekG,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB7H,MAAK,YAAkD,IAA/C8H,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.a596a3bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailContainer\":\"detail_view_detailContainer__1n871\",\"header\":\"detail_view_header__1yy8b\",\"footer\":\"detail_view_footer__15AZ1\",\"imgContainer\":\"detail_view_imgContainer__36CRS\",\"img\":\"detail_view_img__EDs6R\",\"nav\":\"detail_view_nav__3ZxCL\",\"left\":\"detail_view_left__1vghy\",\"right\":\"detail_view_right__2oH8f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"preview_container__3tyz3\",\"comicLabel\":\"preview_comicLabel__2qlCh\",\"thumbnail\":\"preview_thumbnail__PGGfu\",\"throbber\":\"preview_throbber__3alol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"navigator_container__3K_-l\",\"monthControls\":\"navigator_monthControls__MfA8c\",\"chevron\":\"navigator_chevron__3KyBX\",\"left\":\"navigator_left__3q30m\",\"right\":\"navigator_right__2yV4y\",\"star\":\"navigator_star__C3ecu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3STXK\",\"number\":\"header_number__pOrbt\",\"title\":\"header_title__3K53V\",\"starButton\":\"header_starButton__399XM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"error-view_container__Ew58w\",\"errorItem\":\"error-view_errorItem__37iuF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"popover_background__217Kq\",\"content\":\"popover_content__iScld\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"links\":\"footer_links__27k-1\",\"altContainer\":\"footer_altContainer__r4MC5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"thumbnail_image__2JMsh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"throbber_container__12-ci\",\"throbber-bars\":\"throbber_throbber-bars___fcy3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"star\":\"star_star__3FUks\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"month-selector-button_button__2XkCV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"overview_container__NObvQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__290cr\"};","import fetch from 'node-fetch';\r\n\r\nconst getUrl = (comicId?: number) => `https://xkcd.com/${comicId ? `${comicId}/` : ''}info.0.json`\r\nconst getProxyURL = (comicId?: number) => 'https://cors-anywhere.herokuapp.com/' + getUrl(comicId)\r\n\r\n\r\nexport type xkcdInfo = {\r\n    number: number,\r\n\r\n    date: Date,\r\n\r\n    img: string,\r\n    safe_title: string,\r\n    title: string,\r\n    alt: string,\r\n    link: string,\r\n    news: string,\r\n    transcript: string,\r\n}\r\n\r\nconst jsonToXKCD = (json: string): xkcdInfo => {\r\n    const obj = JSON.parse(json);\r\n    const { year, month, day, num, ...rest } = obj\r\n\r\n    return {\r\n        date: new Date(Number(year), Number(month) - 1, Number(day)),\r\n        number: num,\r\n        ...rest,\r\n    }\r\n}\r\n\r\nconst getPageInfo = async (comicId?: number, preload = false): Promise<xkcdInfo> => {\r\n    if (comicId !== undefined && comicId <= 0) {\r\n        throw new Error(`Could not get comic with id ${comicId}.`)\r\n    }\r\n\r\n    const url = getProxyURL(comicId)\r\n    if (comicId) {\r\n        // Don't retrieve from cache if we are trying to get the latest comic.\r\n        const storedData = localStorage.getItem(url)\r\n        if (storedData) {\r\n            return jsonToXKCD(storedData)\r\n        }\r\n    }\r\n\r\n    const response = await fetch(url)\r\n\r\n    if (!response.ok) {\r\n        console.error(\"Could get comic \", url)\r\n        throw new Error(\"Comic info could not be gotten. \" + response.statusText)\r\n    }\r\n\r\n    const result = await response.text()\r\n    localStorage.setItem(url, result)\r\n\r\n    const xkcdInfo = jsonToXKCD(result);\r\n\r\n    if (preload) {\r\n        preloadImage(xkcdInfo.img)\r\n    }\r\n\r\n    return xkcdInfo\r\n}\r\nexport default getPageInfo\r\n\r\nexport const preloadImage = (url: string): Promise<void> => {\r\n    return new Promise((resolve, reject) => {\r\n        const img = new Image()\r\n        img.addEventListener('load', () => resolve())\r\n        img.addEventListener('error', ({ message }) => reject(message))\r\n\r\n        img.src = url\r\n    })\r\n}","export type SimpleDate = {\r\n    year: number;\r\n    month: number;\r\n};\r\n\r\nexport type SimpleDateRange = {\r\n    from: SimpleDate;\r\n    to: SimpleDate;\r\n};\r\n\r\nexport function isSimpleDateRange(obj: unknown): obj is SimpleDateRange {\r\n    return (\r\n        typeof obj == 'object'\r\n        && obj != null\r\n        && isSimpleDate((obj as { from: unknown }).from)\r\n        && isSimpleDate((obj as { to: unknown }).to)\r\n    )\r\n}\r\n\r\nexport function isSimpleDate(obj: unknown): obj is SimpleDate {\r\n    return (\r\n        typeof obj === 'object'\r\n        && obj !== null\r\n        && typeof (obj as { year: unknown }).year === 'number'\r\n        && typeof (obj as { month: unknown }).month === 'number'\r\n    )\r\n}\r\n\r\nexport function isDate(obj: unknown): obj is Date {\r\n    return obj instanceof Date\r\n}\r\n\r\nexport function getSimpleDateRange(from?: Date, to?: Date): SimpleDateRange;\r\nexport function getSimpleDateRange(from: SimpleDate, to: SimpleDate): SimpleDateRange;\r\nexport function getSimpleDateRange(from: SimpleDate | Date = new Date(), to: SimpleDate | Date = new Date()): SimpleDateRange {\r\n    if (isSimpleDate(from) && isSimpleDate(to)) {\r\n        return { from, to }\r\n    }\r\n\r\n    // as Date is required because the type system isn't quite clever enough\r\n    return { from: dateToSimpleDate(from as Date), to: dateToSimpleDate(to as Date) }\r\n}\r\n\r\n\r\nexport function compareSimpleDate(range: SimpleDateRange): number\r\nexport function compareSimpleDate(first: SimpleDate, second:SimpleDate): number\r\nexport function compareSimpleDate(arg: SimpleDate | SimpleDateRange, second?: SimpleDate): number {\r\n    if(isSimpleDateRange(arg)){\r\n        return compareSimpleDate(arg.from, arg.to)\r\n    }\r\n\r\n    // Typescript is unhappy with the second argument possibly being undefined.\r\n    // This is a shortcoming of the type system, though.\r\n    if(arg.year !== second!.year) return Math.sign(arg.year - second!.year)\r\n    return Math.sign(arg.month - second!.month)\r\n}\r\n\r\nexport function dateToSimpleDate(date: Date): SimpleDate {\r\n    return {\r\n        year: date.getFullYear(),\r\n        month: date.getMonth() + 1, // The Date() month counting is 0-indexed\r\n    }\r\n}\r\n\r\nexport function simpleDateToDate({ year, month }: SimpleDate, endOfMonth = false): Date {\r\n    if (endOfMonth) {\r\n        // year, month, day, hour, minute, second, milisecond\r\n        // Month isn't subtracted one because it's 0-indexed, but we need the next one to loop back around\r\n        return new Date(year, month, 1, 0, 0, 0, -1)\r\n    }\r\n    return new Date(year, month - 1)\r\n}\r\n\r\nexport function adjustSimpleDate({year, month}: SimpleDate, amount = 1) {\r\n    // Don't forget that SimpleDate months are 1-indexed.\r\n    const months = year * 12 + (month - 1) + amount;\r\n\r\n    return {\r\n        month: 1 + (months % 12),\r\n        year: Math.floor(months / 12),\r\n    }\r\n}\r\n\r\nexport function adjustSimpleDateRange({ from, to }: SimpleDateRange, amount = 1): SimpleDateRange {\r\n    return { from: adjustSimpleDate(from, amount), to: adjustSimpleDate(to, amount) }\r\n}\r\n","\r\nconst key = 'xkcd-favourites' as const\r\nconst favourites: number[] = JSON.parse(localStorage.getItem(key) ?? \"[]\")\r\n\r\nexport default function getFavourites() {\r\n    return [...favourites];\r\n}\r\n\r\nexport function isFavourite(id:number) {\r\n    return favourites.includes(id)\r\n}\r\n\r\nexport function addFavourite(id: number) {\r\n    if (favourites.includes(id)) { return }\r\n    \r\n    favourites.push(id)\r\n    localStorage.setItem(key, JSON.stringify(favourites))\r\n}\r\n\r\nexport function removeFavourite(id: number) {\r\n    const index = favourites.findIndex(val => val === id)\r\n    if (index === -1) { return }\r\n\r\n    favourites.splice(index, 1)\r\n    localStorage.setItem(key, JSON.stringify(favourites))\r\n}","import { useEffect, useState } from \"react\"\r\n\r\nimport styles from './error-view.module.css'\r\n\r\ntype ErrorViewProps = {\r\n    queue: ErrorQueue\r\n}\r\n\r\nexport default function ErrorView({ queue }: ErrorViewProps) {\r\n    const [messages, setMessages] = useState(queue.getAllItems());\r\n    useEffect(() => {\r\n        const listener = (newItems: QueueEntry[]) => { setMessages(newItems) }\r\n        queue.addListener(listener)\r\n        return () => queue.removeListener(listener)\r\n    }, [setMessages, queue])\r\n\r\n    return <div className={styles.container}>\r\n        {messages.map(({ message, id }) => <span key={id} className={styles.errorItem}>\r\n            {message}<button value=\"x\" onClick={() => { queue.removeItem(id) }}>x</button>\r\n        </span>)}\r\n    </div>\r\n}\r\n\r\ntype Message = {\r\n    message: string\r\n    timeout: number | \"infinite\"\r\n}\r\ntype QueueEntry = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\ntype ErrorQueueListener = (queue: QueueEntry[]) => void\r\n\r\nexport class ErrorQueue {\r\n    #queue: QueueEntry[] = []\r\n    #idCounter = 0;\r\n    #listeners: ErrorQueueListener[] = []\r\n\r\n    addItem(message: string): void\r\n    addItem(message: Message): void\r\n    addItem(obj: string | Message) {\r\n        const id = this.#idCounter++\r\n        if (typeof obj === 'string') {\r\n            this.#queue.push({ id, message: obj })\r\n\r\n            this.#notifyListeners()\r\n            return;\r\n        }\r\n\r\n        this.#queue.push({ id, message: obj.message })\r\n        if (obj.timeout !== \"infinite\") {\r\n            setTimeout(() => {\r\n                this.removeItem(id)\r\n            }, obj.timeout)\r\n        }\r\n    }\r\n\r\n    getAllItems() {\r\n        // make a deep copy, so that callers don't get access.\r\n        return this.#queue.map(({ id, message }) => ({ id, message }))\r\n    }\r\n\r\n    addListener(listener: ErrorQueueListener) {\r\n        this.#listeners.push(listener)\r\n    }\r\n\r\n    removeListener(listener: ErrorQueueListener) {\r\n        const index = this.#listeners.indexOf(listener)\r\n        if (index < 0) return;\r\n        this.#listeners.splice(index, 1)\r\n    }\r\n\r\n    removeItem = (id: number) => {\r\n        const index = this.#queue.findIndex((entry) => entry.id === id)\r\n        if (index < 0) return;\r\n        this.#queue.splice(index, 1);\r\n        \r\n        this.#notifyListeners()\r\n    }\r\n\r\n    #notifyListeners = () => {\r\n        for (const listener of this.#listeners) {\r\n            listener(this.getAllItems())\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { xkcdInfo } from '../../XKCDApiApi'\r\nimport cs, { csType } from 'cs';\r\n\r\nimport styles from './thumbnail.module.css'\r\n\r\nexport type ThumbnailType = {\r\n    comicInfo: xkcdInfo\r\n    className?: csType\r\n    onClick?: (event: React.MouseEvent<HTMLImageElement, MouseEvent>) => void\r\n}\r\n\r\nconst Thumbnail: React.FC<ThumbnailType> = ({ comicInfo: { img: imgUrl, title }, className, onClick }) => {\r\n    return <img onClick={onClick} src={imgUrl} alt={title} title={title} className={cs(styles.image, className)} />;\r\n};\r\n\r\nexport default Thumbnail\r\n","import React from \"react\"\r\nimport cs, { csType } from \"cs\"\r\n\r\nimport styles from './throbber.module.css'\r\n\r\ntype ThrobberProps = {\r\n    color?: string\r\n    className?: csType\r\n}\r\n\r\nconst Throbber: React.FC<ThrobberProps> = ({ color, className }) => <div className={cs(styles.container, className)}>\r\n    <div style={{ background: color }} />\r\n    <div style={{ background: color }} />\r\n    <div style={{ background: color }} />\r\n</div>\r\nexport default Throbber\r\n\r\n// Throbber based on examples from here: https://loading.io/css/","export default __webpack_public_path__ + \"static/media/full_star.7bef184c.svg\";","export default __webpack_public_path__ + \"static/media/empty_star.51ac6047.svg\";","import full_star from './full_star.svg'\r\nimport empty_star from './empty_star.svg'\r\nimport styles from './star.module.css'\r\nimport cs, { csType } from 'cs'\r\n\r\ntype StarProps = {\r\n    filled: boolean\r\n    size?: number\r\n    onClick?: (event: React.MouseEvent<HTMLImageElement, MouseEvent>) => void\r\n    className?: csType\r\n}\r\n\r\nconst starEnumToPictureMap = new Map([\r\n    [true, { src: full_star, description: \"Full star\" }],\r\n    [false, { src: empty_star, description: \"Empty star\" }],\r\n])\r\n\r\nexport default function Star({ filled, size = 20, onClick, className }: StarProps) {\r\n    return <img\r\n        className={cs(styles.star, className)}\r\n        src={starEnumToPictureMap.get(filled)?.src}\r\n        alt={starEnumToPictureMap.get(filled)?.description}\r\n        width={size} height={size}\r\n        onClick={onClick}\r\n    />\r\n}","import { useEffect, useState } from \"react\"\r\nimport { xkcdInfo } from '../../XKCDApiApi'\r\nimport Thumbnail from \"../thumbnail/thumbnail\"\r\nimport Throbber from \"../throbber/throbber\"\r\n\r\nimport styles from './preview.module.css'\r\nimport Star from \"../star/star\"\r\nimport { isFavourite, addFavourite, removeFavourite } from \"../../favourites\"\r\n\r\ntype PreviewType = {\r\n    info: Promise<xkcdInfo>\r\n    onOpenComic?: (id: number) => void\r\n}\r\n\r\nconst Preview: React.FC<PreviewType> = ({ info: infoPromise, onOpenComic }) => {\r\n    const [info, setInfo] = useState<xkcdInfo>()\r\n    const [favourite, setFavourite] = useState(false)\r\n\r\n    useEffect(() => {\r\n        infoPromise.then(info => {\r\n            setInfo(info)\r\n            setFavourite(isFavourite(info.number))\r\n        })\r\n    }, [infoPromise])\r\n\r\n    if (!info) {\r\n        return <div className={styles.container + ' ' + styles.throbber}>\r\n            <span className={styles.comicLabel} >loading...</span>\r\n            <Throbber color=\"hsla(0, 0%, 0%, 0.2)\" className={styles.thumbnail} />\r\n        </div>\r\n    }\r\n\r\n    return <div className={styles.container} >\r\n        <span className={styles.comicLabel} >\r\n            {info.title}\r\n            <Star filled={favourite} onClick={() => { (favourite ? removeFavourite : addFavourite)(info.number); setFavourite(!favourite) }} />\r\n        </span>\r\n        <Thumbnail className={styles.thumbnail} comicInfo={info} onClick={() => onOpenComic && onOpenComic(info.number)} />\r\n    </div>\r\n}\r\n\r\nexport default Preview\r\n","import { SimpleDate, SimpleDateRange, compareSimpleDate } from \"../../simple_date\";\r\nimport { monthNames } from \"./month-selector\";\r\n\r\nimport styles from './month-selector-button.module.css'\r\n\r\ntype SelectorElementProps = {\r\n    onOpen?: () => void;\r\n    dateRange: SimpleDateRange;\r\n};\r\n\r\nexport function MonthSelectorButton({ onOpen, dateRange }: SelectorElementProps) {\r\n    const text = (compareSimpleDate(dateRange) === 0)\r\n        ? simpleDateToString(dateRange.from) : simpleDateRangeToString(dateRange)\r\n\r\n    return <span className={styles.button} onClick={onOpen}>{text}</span>;\r\n}\r\n\r\nfunction simpleDateRangeToString({ from, to }: SimpleDateRange) {\r\n    return `From: ${simpleDateToString(from)} — To: ${simpleDateToString(to)}`\r\n}\r\n\r\nfunction simpleDateToString({ month, year }: SimpleDate): string {\r\n    // Month objects are 1-indexed, arrays are 0-indexed.\r\n    return `${monthNames[month - 1]} ${year}`\r\n}","import { useRef } from 'react'\r\n// @ts-ignore\r\nimport Picker from 'react-month-picker'\r\nimport 'react-month-picker/scss/month-picker.scss'\r\nimport './month-selector.css'\r\nimport { compareSimpleDate, isSimpleDate } from '../../simple_date'\r\nimport { SimpleDate, SimpleDateRange } from \"../../simple_date\"\r\nimport { MonthSelectorButton } from './month-selector-button'\r\n\r\nexport const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'] as const\r\n\r\ntype MonthSelectorProps = {\r\n    onChangeMonth: (start: SimpleDate, end: SimpleDate) => void\r\n    dateRange: SimpleDateRange\r\n    validDateRange: SimpleDateRange\r\n}\r\n\r\nlet age = 0;\r\nfunction MonthSelector({ dateRange, onChangeMonth, validDateRange: { from: validFrom, to: validTo } }: MonthSelectorProps) {\r\n    const pickerRef = useRef<Picker>();\r\n\r\n    return <Picker\r\n        age={age++}\r\n        ref={pickerRef}\r\n        value={compareSimpleDate(dateRange) === 0 ? dateRange.from : dateRange}\r\n        lang={monthNames.map(monthName => monthName.slice(0, 3))}\r\n        years={{ min: validFrom, max: validTo }}\r\n        autoRange={1}\r\n        onDismiss={(arg: SimpleDate | SimpleDateRange) => { isSimpleDate(arg) ? onChangeMonth(arg, arg) : onChangeMonth(arg.from, arg.to) }}\r\n    >\r\n        <MonthSelectorButton onOpen={() => pickerRef.current?.show()} dateRange={dateRange} />\r\n    </Picker>\r\n}\r\n\r\nexport default MonthSelector\r\n","export default __webpack_public_path__ + \"static/media/chevron.78647bbb.svg\";","import cs from \"cs\";\r\nimport { getSimpleDateRange, SimpleDateRange, adjustSimpleDateRange } from \"../../simple_date\";\r\n\r\nimport MonthSelector from '../month-selector/month-selector';\r\nimport Star from '../star/star'\r\n\r\nimport chevron from './chevron.svg'\r\nimport styles from './navigator.module.css'\r\n\r\n\r\ntype navigatorProps = {\r\n    setMonthRange: (range: SimpleDateRange) => void\r\n    onToggleViewFavourites: () => void\r\n    dateRange: SimpleDateRange\r\n    validDateRange: SimpleDateRange\r\n    viewingFavourites?: boolean\r\n}\r\n\r\nconst Navigator = ({ setMonthRange, onToggleViewFavourites, dateRange, validDateRange, viewingFavourites = false }: navigatorProps) =>\r\n    <div className={styles.container}>\r\n        <div className={styles.monthControls} >\r\n            <img src={chevron} className={cs(styles.chevron, styles.left)}\r\n                onClick={() => setMonthRange(adjustSimpleDateRange(dateRange, -1))} alt=\"one month earlier\" />\r\n            \r\n            <MonthSelector onChangeMonth={(start, end) => setMonthRange(getSimpleDateRange(start, end))}\r\n                dateRange={dateRange} validDateRange={validDateRange} />\r\n            \r\n            <img src={chevron} className={cs(styles.chevron, styles.right)}\r\n                onClick={() => setMonthRange(adjustSimpleDateRange(dateRange, 1))} alt=\"one month later\" />\r\n        </div>\r\n        \r\n        <Star onClick={onToggleViewFavourites} filled={viewingFavourites} size={30} className={styles.star} />\r\n    </div>\r\n\r\nexport default Navigator\r\n","import { FC } from 'react'\r\nimport { xkcdInfo } from '../XKCDApiApi'\r\nimport { SimpleDateRange } from '../simple_date'\r\n\r\nimport Preview from './preview/preview'\r\nimport Navigator from './navigator/navigator'\r\n\r\nimport styles from './overview.module.css'\r\n\r\ntype OverviewProps = {\r\n    onOpenComic?: (id: number) => void\r\n    onUpdateDateRange?: (range: SimpleDateRange) => void\r\n    onToggleFavourites?: () => void\r\n    dateRange: SimpleDateRange\r\n    validDateRange: SimpleDateRange\r\n    comics: [number, Promise<xkcdInfo>][]\r\n    viewingFavourites?: boolean\r\n}\r\n\r\nconst Overview: FC<OverviewProps> = ({ dateRange, comics, onOpenComic, onUpdateDateRange, onToggleFavourites, validDateRange, viewingFavourites }: OverviewProps) => {\r\n    return <>\r\n        <div className={styles.container}>\r\n            {comics.length === 0 ? \"loading...\" : \"\"}\r\n            {comics.map(([id, info]) => <Preview key={id} info={info} onOpenComic={onOpenComic} />)}\r\n        </div>\r\n        <Navigator\r\n            viewingFavourites={viewingFavourites}\r\n            dateRange={dateRange}\r\n            onToggleViewFavourites={() => onToggleFavourites && onToggleFavourites()}\r\n            setMonthRange={(range) => onUpdateDateRange && onUpdateDateRange(range)}\r\n            validDateRange={validDateRange}\r\n        />\r\n    </>\r\n}\r\n\r\nexport default Overview\r\n\r\n","import React, { useEffect, useRef } from 'react';\r\nimport styles from './popover.module.css';\r\n\r\ntype PopoverProps = {\r\n    open?: boolean;\r\n    onDismiss?: () => void;\r\n    children: React.ReactNode;\r\n};\r\n\r\nexport default function Popover({ open = false, onDismiss, children }: PopoverProps) {\r\n    const ref = useRef<HTMLDivElement>(null)\r\n\r\n    useEffect(() => {\r\n        if(!onDismiss) return;\r\n        const handler = (event: MouseEvent) => {\r\n            if (!ref.current?.contains(event.target as Node)) { onDismiss() }\r\n        }\r\n        window.addEventListener('click', handler)\r\n        return () => { window.removeEventListener('click', handler) }\r\n    }, [onDismiss])\r\n\r\n    if (!open)\r\n        return null;\r\n\r\n    return <div className={styles.background}>\r\n        <div ref={ref} className={styles.content}>{children} </div>\r\n    </div>;\r\n}\r\n","import cs, { csType } from 'cs';\r\nimport Star from '../../star/star';\r\nimport styles from './header.module.css';\r\n\r\ntype ComicHeaderProps = {\r\n    number: number\r\n    title: string\r\n\r\n    isFavourite?: boolean\r\n    onToggleFavourite?: () => void\r\n\r\n    className?: csType\r\n};\r\n\r\nexport default function ComicHeader({ number, title, isFavourite = false, onToggleFavourite, className='' }: ComicHeaderProps) {\r\n    return <span className={cs(className, styles.header)}>\r\n        <span className={styles.number}>{number}</span>\r\n        <span className={styles.title}>{title}</span>\r\n        <Star onClick={onToggleFavourite} filled={isFavourite} className={styles.starButton} />\r\n    </span>;\r\n}\r\n","import cs, { csType } from 'cs';\r\nimport { xkcdInfo } from '../../../XKCDApiApi';\r\nimport styles from './footer.module.css';\r\n\r\ntype ComicFooterType = {\r\n    comicInfo: xkcdInfo\r\n    className?: csType\r\n}\r\n\r\nexport default function ComicFooter({ comicInfo, className='' }: ComicFooterType) {\r\n    return <><div className={cs(styles.links, className)}>\r\n        <a href={getSiteLink(comicInfo.number)} target=\"blank_\" rel=\"noopener noreferrer\" >Source</a>\r\n        <a href={getExplainLink(comicInfo.number)} target=\"blank_\" rel=\"noopener noreferrer\" >Explaination</a>\r\n    </div>\r\n    <blockquote className={styles.altContainer}>{comicInfo.alt}</blockquote>\r\n    </>\r\n}\r\n\r\nconst getSiteLink = (id: number) => `https://xkcd/com/${id}`\r\nconst getExplainLink = (id: number) => `https://explainxkcd.com/wiki/index.php/${id}`\r\n","import React, { useEffect, useState } from 'react';\r\nimport fetchComicInfo, { xkcdInfo } from '../../XKCDApiApi'\r\n\r\nimport Popover from '../popover/popover';\r\nimport ComicHeader from './header/header';\r\nimport ComicFooter from './footer/footer';\r\n\r\nimport styles from './detail_view.module.css'\r\nimport { addFavourite, isFavourite, removeFavourite } from '../../favourites';\r\nimport { ErrorQueue } from '../error-view/error-view';\r\nimport cs from 'cs';\r\n\r\nconst DetailView: React.FC<DetailViewProps> = ({ number, previousComic, nextComic, goBackHome, errorQueue }) => {\r\n    const [comicInfo, setComicInfo] = useState<xkcdInfo | null>(null);\r\n    // eslint-disable-next-line\r\n    const [_, reRender] = useState(true);\r\n    const favourite = isFavourite(number)\r\n    useEffect(() => {\r\n        // Get the info for this comic.\r\n        fetchComicInfo(number).then(setComicInfo).catch((err: Error) => errorQueue.addItem(`Could not get information for this comic. [${err.message}]`))\r\n    }, [number, errorQueue])\r\n\r\n    useEffect(() => { // Allow keyboard navigation.\r\n        const handler = (event: KeyboardEvent) => {\r\n            if (event.key === \"ArrowLeft\" && previousComic) { previousComic() }\r\n            if (event.key === \"ArrowRight\" && nextComic) { nextComic() }\r\n            if (event.key === \"Escape\" && goBackHome) { goBackHome() }\r\n        }\r\n        window.addEventListener('keydown', handler)\r\n        return () => window.removeEventListener('keydown', handler)\r\n    }, [previousComic, nextComic, goBackHome])\r\n\r\n    if (!comicInfo) {\r\n        return <div>\"... loading comic.\"</div>\r\n    }\r\n\r\n    return <Popover open={true} onDismiss={goBackHome} >\r\n        <div className={styles.detailContainer}>\r\n            <ComicHeader\r\n                number={comicInfo.number}\r\n                title={comicInfo.title}\r\n                isFavourite={favourite}\r\n                onToggleFavourite={() => {\r\n                    (favourite ? removeFavourite : addFavourite)(number)\r\n                    reRender(bool => !bool)\r\n                }}\r\n                className={styles.header}\r\n            />\r\n            <div className={styles.imgContainer}>\r\n                <div className={cs(styles.left, styles.nav)} onClick={previousComic} ></div>\r\n                <img className={styles.img} src={comicInfo.img} alt={comicInfo.title} title={comicInfo.alt} />\r\n                <div className={cs(styles.right, styles.nav)} onClick={nextComic}></div>\r\n            </div>\r\n            <ComicFooter comicInfo={comicInfo} className={styles.footer} />\r\n        </div>\r\n    </Popover>\r\n}\r\n\r\nexport default DetailView\r\n\r\ntype DetailViewProps = {\r\n    number: number\r\n    previousComic?: () => void\r\n    nextComic?: () => void\r\n    goBackHome?: () => void\r\n    errorQueue: ErrorQueue\r\n}","import React, { useEffect, useState } from 'react';\r\nimport fetchComicInfo, { preloadImage, xkcdInfo } from './XKCDApiApi'\r\nimport { SimpleDateRange, SimpleDate, getSimpleDateRange, dateToSimpleDate, simpleDateToDate, compareSimpleDate, adjustSimpleDate } from './simple_date'\r\nimport getFavourites from './favourites';\r\n\r\nimport ErrorView, {ErrorQueue} from './components/error-view/error-view'\r\nimport Overview from './components/overview';\r\nimport DetailView from './components/detail_view/detail_view';\r\n\r\nimport styles from './App.module.css'\r\n\r\nconst errorQueue = new ErrorQueue()\r\n\r\nfunction App() {\r\n    const [dateRange, setDateRange] = useState<SimpleDateRange>(getSimpleDateRange())\r\n    const [latestComic, setLatestComic] = useState<xkcdInfo>()\r\n    const [firstComic, setFirstComic] = useState<xkcdInfo>()\r\n    const [openComic, setOpenComic] = useState<number | null>(null)\r\n    const [comicInfoArray, setComicInfoArray] = useState<[number, Promise<xkcdInfo>][]>([])\r\n    const [viewingFavourites, setViewingFavourites] = useState(false)\r\n\r\n    // Fetch first and last comic\r\n    useEffect(() => {\r\n        fetchComicInfo().then(info => setLatestComic(info)).catch((err: Error) => errorQueue.addItem(`Cannot load comic. [${err.message}]`))\r\n        fetchComicInfo(1).then(info => setFirstComic(info)).catch((err: Error) => errorQueue.addItem(`Cannot load latest comic. [${err.message}]`))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!latestComic) return; // Still loading.\r\n        if (viewingFavourites) {\r\n            const result = getFavourites()\r\n                .map<[number, Promise<xkcdInfo>]>(num => [num, fetchComicInfo(num)])\r\n                .sort(([a], [b]) => a - b)\r\n            setComicInfoArray(result)\r\n        } else {\r\n            getComicIdsInRange(dateRange)\r\n                .then(comicRange => {\r\n                    setComicInfoArray(range(...comicRange).map(num => [num, fetchComicInfo(num)]))\r\n                }).catch((err: Error) => {\r\n                    errorQueue.addItem(`Couldn't get all the comics in this date range. [${err.message}]`)\r\n                })\r\n        }\r\n    }, [dateRange, latestComic, setComicInfoArray, viewingFavourites])\r\n\r\n    // Preload the next/previous comic pages, if there are any.\r\n    useEffect(() => {\r\n        if (!openComic) return;\r\n        if (openComic + 1 <= (latestComic?.number ?? 0)) {\r\n            fetchComicInfo(openComic + 1)\r\n                .then(({ img }) => preloadImage(img))\r\n                .catch((err: Error) => errorQueue.addItem(`Could not preload next image. [${err.message}]`))\r\n        }\r\n        if (openComic - 1 >= 1) {\r\n            fetchComicInfo(openComic - 1)\r\n                .then(({ img }) => preloadImage(img))\r\n                .catch((err: Error) => errorQueue.addItem(`Could not preload previous image. [${err.message}]`))\r\n        }\r\n    }, [openComic, latestComic])\r\n\r\n    // Check if our openComic value exceeds our current date range. If so, adjust the dateRange to include it\r\n    useEffect(() => {\r\n        if (!openComic || viewingFavourites) return;\r\n        fetchComicInfo(openComic)\r\n            .then(info => {\r\n                const comicMonth = dateToSimpleDate(info.date)\r\n                if (compareSimpleDate(comicMonth, dateRange.from) < 0) {\r\n                    // If the date is before our current range\r\n                    setDateRange(range => getSimpleDateRange(adjustSimpleDate(range.from, -1), range.to))\r\n                }\r\n                if (compareSimpleDate(comicMonth, dateRange.to) > 0) {\r\n                    // If the date is after our current range\r\n                    setDateRange(range => getSimpleDateRange(range.from, adjustSimpleDate(range.to, 1)))\r\n                }\r\n            })\r\n            .catch((err: Error) => {\r\n                errorQueue.addItem(`Encountered an error updating this page. [${err.message}]` )\r\n            })\r\n    }, [openComic, dateRange, setDateRange, viewingFavourites])\r\n\r\n    if (!latestComic || !firstComic) {\r\n        // No comics loaded yet...\r\n        return <>\r\n            <ErrorView queue={errorQueue} />\r\n            ...loading\r\n        </>\r\n    }\r\n\r\n    return <div className={styles.container}>\r\n        <ErrorView queue={errorQueue} />\r\n        <Overview\r\n            comics={comicInfoArray}\r\n            onOpenComic={setOpenComic}\r\n            dateRange={dateRange}\r\n            validDateRange={getSimpleDateRange(firstComic.date, latestComic.date)}\r\n            onUpdateDateRange={(range) => {setDateRange(range); setComicInfoArray([])} }\r\n            viewingFavourites={viewingFavourites}\r\n            onToggleFavourites={() => { setViewingFavourites(viewingFavs => !viewingFavs) }}\r\n        />\r\n        {openComic && <DetailView\r\n            number={openComic}\r\n            nextComic={() => setOpenComic(num => Math.min(latestComic.number, (num ?? 0) + 1))}\r\n            previousComic={() => setOpenComic(num => Math.max(1, (num ?? 0) - 1))}\r\n            goBackHome={() => setOpenComic(null)}\r\n            errorQueue={errorQueue}\r\n        />}\r\n    </div>\r\n}\r\n\r\nexport default App;\r\n\r\nasync function getComicIdsInRange({ from, to }: SimpleDateRange)/*: Promise<[number, number]>*/ {\r\n    const firstNumber = 1\r\n    const [{ date: firstDate }, { date: lastDate, number: lastNumber }] = await Promise.all([fetchComicInfo(firstNumber), fetchComicInfo()])\r\n    const firstSimpleDate = dateToSimpleDate(firstDate)\r\n    const firstMonthCount = firstSimpleDate.year * 12 + firstSimpleDate.month\r\n    const lastSimpleDate = dateToSimpleDate(lastDate)\r\n    const lastMonthCount = lastSimpleDate.year * 12 + lastSimpleDate.month\r\n\r\n    const monthRange = lastMonthCount - firstMonthCount\r\n    const startMonthCount = from.year * 12 + from.month\r\n    const endMonthCount = to.year * 12 + to.month\r\n\r\n    const startMonthDelta = (startMonthCount - firstMonthCount) / monthRange\r\n    const endMonthDelta = (endMonthCount - firstMonthCount) / monthRange\r\n\r\n    const estimatedStartComicIndex = clamp(Math.round(startMonthDelta * lastNumber), 1, lastNumber)\r\n    const estimatedEndComicIndex = clamp(Math.round(endMonthDelta * lastNumber), 1, lastNumber)\r\n\r\n    return Promise.all([\r\n        findBoundaryComic(from, estimatedStartComicIndex, lastNumber, false),\r\n        findBoundaryComic(to, estimatedEndComicIndex, lastNumber, true),\r\n    ])\r\n}\r\n\r\nasync function findBoundaryComic(date: SimpleDate, estimatedIndex: number, lastComic: number, isEnd: boolean = false) {\r\n    let dateObj = simpleDateToDate(date, isEnd)\r\n    // Make the index odd, so we can reliably step 2 indices at a time\r\n    let index = clamp(estimatedIndex % 2 ? estimatedIndex : estimatedIndex + 1, 1, lastComic)\r\n    while ((await fetchComicInfo(index)).date > dateObj) {\r\n        if (index === 1) break\r\n        index -= 2\r\n    }\r\n\r\n    while ((await fetchComicInfo(index)).date < dateObj) {\r\n        if (index === lastComic) return lastComic\r\n        index++\r\n    }\r\n\r\n    return index + (isEnd ? -1 : 0);\r\n}\r\n\r\nfunction range(start: number = 0, end: number = 1): ReadonlyArray<number> {\r\n    const returnValue = []\r\n    for (let i = start; i <= end; i++) {\r\n        returnValue.push(i)\r\n    }\r\n    return returnValue\r\n}\r\n\r\nfunction clamp(num: number, min = 0, max = 1) {\r\n    return Math.min(\r\n        Math.max(num, min),\r\n        max,\r\n    )\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}